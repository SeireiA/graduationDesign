{"version":3,"file":"index.js","sources":["components/mp-html/components/mp-html/search/index.js"],"sourcesContent":["/**\n * @fileoverview search 插件\n */\nfunction Search (vm) {\n  /**\n   * @description 关键词搜索\n   * @param {regexp|string} key 要搜索的关键词\n   * @param {boolean} anchor 是否将搜索结果设置为锚点\n   * @param {string} style 搜索结果的样式\n   */\n  vm.search = function (key, anchor, style = 'background-color:yellow') {\n    const res = []\n    const stack = [];\n\n    // 遍历搜索\n    (function traversal (nodes) {\n      for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i]\n        if (node.type === 'text' && key) {\n          const text = node.text\n          const arr = text.split(key)\n          if (arr.length > 1) {\n            node = {\n              name: 'span',\n              attrs: {},\n              type: 'node',\n              c: 1,\n              s: 1,\n              children: []\n            }\n            vm.$set(nodes, i, node)\n            for (let j = 0; j < arr.length; j++) {\n              if (arr[j]) {\n                node.children.push({\n                  type: 'text',\n                  text: arr[j]\n                })\n              }\n              if (j !== arr.length - 1) {\n                // 关键词转为一个 span\n                node.children.push({\n                  name: 'span',\n                  attrs: {\n                    id: anchor ? 'search' + (res.length + 1) : undefined, // 用于锚点的 id\n                    style: style\n                  },\n                  // #ifdef VUE3\n                  c: 1,\n                  // #endif\n                  children: [{\n                    type: 'text',\n                    text: key instanceof RegExp ? key.exec(text)[0] : key\n                  }]\n                })\n                res.push(node.children[node.children.length - 1].attrs)\n              }\n            }\n            if (key instanceof RegExp) {\n              key.exec(text)\n            }\n            if (anchor) {\n              for (let l = stack.length; l--;) {\n                if (stack[l].c) {\n                  break\n                } else {\n                  vm.$set(stack[l], 'c', 1)\n                }\n              }\n            }\n          }\n        } else if (node.s) {\n          let text = ''\n          // 复原上一次的结果\n          for (let k = 0; k < node.children.length; k++) {\n            const child = node.children[k]\n            if (child.text) {\n              text += child.text\n            } else {\n              text += child.children[0].text\n            }\n          }\n          vm.$set(nodes, i, {\n            type: 'text',\n            text\n          })\n          if (key && (key instanceof RegExp ? key.test(text) : text.includes(key))) {\n            i--\n          }\n        } else if (node.children) {\n          stack.push(node)\n          traversal(node.children)\n          stack.pop()\n        }\n      }\n    })(vm.nodes)\n\n    return new Promise(function (resolve) {\n      setTimeout(() => {\n        resolve({\n          num: res.length, // 结果数量\n          /**\n           * @description 高亮某一个结果\n           * @param {number} i 第几个\n           * @param {string} hlstyle 高亮的样式\n           */\n          highlight (i, hlstyle = 'background-color:#FF9632') {\n            if (i < 1 || i > res.length) return\n            if (this.last) {\n              res[this.last - 1].style = style\n            }\n            this.last = i\n            res[i - 1].style = hlstyle\n          },\n          /**\n           * @description 跳转到搜索结果\n           * @param {number} i 第几个\n           * @param {number} offset 偏移量\n           */\n          jump: anchor\n            ? (i, offset) => {\n                if (i > 0 && i <= res.length) {\n                  vm.navigateTo('search' + i, offset)\n                }\n              }\n            : undefined\n        })\n      }, 200)\n    })\n  }\n}\n\nexport default Search\n"],"names":[],"mappings":"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"}