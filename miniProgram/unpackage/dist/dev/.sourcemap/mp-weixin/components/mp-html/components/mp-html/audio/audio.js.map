{"version":3,"file":"audio.js","sources":["components/mp-html/components/mp-html/audio/audio.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTovMC9iZWlmZW4vMC8wRmlsZXMvMjAyNeetlOi-qS90cy10cy9taW5pUHJvZ3JhbS9jb21wb25lbnRzL21wLWh0bWwvY29tcG9uZW50cy9tcC1odG1sL2F1ZGlvL2F1ZGlvLnZ1ZQ"],"sourcesContent":["<template>\n\t<view v-if=\"controls\" @click=\"onClick\" class=\"_contain\">\n    <!-- 海报和按钮 -->\n\t\t<view class=\"_poster\" :style=\"'background-image:url('+poster+')'\">\n\t\t\t<view class=\"_button\" @tap=\"_buttonTap\">\n\t\t\t\t<view :class=\"playing?'_pause':'_play'\" />\n\t\t\t</view>\n\t\t</view>\n    <!-- 曲名和作者 -->\n\t\t<view class=\"_title\">\n\t\t\t<view class=\"_name\">{{name||'未知音频'}}</view>\n\t\t\t<view class=\"_author\">{{author||'未知作者'}}</view>\n\t\t</view>\n    <!-- 进度条 -->\n    <slider class=\"_slider\" activeColor=\"#585959\" block-size=\"12\" handle-size=\"12\" :disabled=\"error\" :value=\"value\" @changing=\"_seeking\" @change=\"_seeked\" />\n    <!--播放时间-->\n\t\t<view class=\"_time\">{{time||'00:00'}}</view>\n\t</view>\n</template>\n\n<script>\n/**\n * @fileoverview audio 组件\n */\nimport context from './context'\nexport default {\n  data () {\n    return {\n      error: false,\n      playing: false,\n      time: '00:00',\n      value: 0\n    }\n  },\n  props: {\n    aid: String,\n    name: String, // 音乐名\n    author: String, // 作者\n    poster: String, // 海报图片地址\n    autoplay: [Boolean, String], // 是否自动播放\n    controls: [Boolean, String], // 是否显示控件\n    loop: [Boolean, String], // 是否循环播放\n    src: String // 源地址\n  },\n  watch: {\n    src (src) {\n      this.setSrc(src)\n    }\n  },\n  mounted () {\n    this._ctx = uni.createInnerAudioContext()\n    this._ctx.onError((err) => {\n      this.error = true\n      this.$emit('error', err)\n    })\n    this._ctx.onTimeUpdate(() => {\n      const time = this._ctx.currentTime\n      const min = parseInt(time / 60)\n      const sec = Math.ceil(time % 60)\n      this.time = (min > 9 ? min : '0' + min) + ':' + (sec > 9 ? sec : '0' + sec)\n      if (!this.lastTime) {\n        this.value = time / this._ctx.duration * 100 // 不在拖动状态下\n      }\n    })\n    this._ctx.onEnded(() => {\n      if (!this.loop) {\n        this.playing = false\n      }\n    })\n    context.set(this.aid, this)\n    this.setSrc(this.src)\n  },\n  beforeDestroy () {\n    this._ctx.destroy()\n    context.remove(this.aid)\n  },\n  onPageShow () {\n    if (this.playing && this._ctx.paused) {\n      this._ctx.play()\n    }\n  },\n  methods: {\n    // 设置源\n    setSrc (src) {\n      this._ctx.autoplay = this.autoplay\n      this._ctx.loop = this.loop\n      this._ctx.src = src\n      if (this.autoplay && !this.playing) {\n        this.playing = true\n      }\n    },\n    // 播放\n    play () {\n      this._ctx.play()\n      this.playing = true\n      this.$emit('play', {\n        target: {\n          id: this.aid\n        }\n      })\n    },\n    // 暂停\n    pause () {\n      this._ctx.pause()\n      this.playing = false\n      this.$emit('pause')\n    },\n    // 设置播放速率\n    playbackRate (rate) {\n      this._ctx.playbackRate = rate\n    },\n    // 移动进度条\n    seek (sec) {\n      this._ctx.seek(sec)\n    },\n    // 内部方法\n    _buttonTap () {\n      if (this.playing) this.pause()\n      else this.play()\n    },\n    _seeking (e) {\n      // 避免过于频繁 setData\n      if (e.timeStamp - this.lastTime < 200) return\n      const time = Math.round(e.detail.value / 100 * this._ctx.duration)\n      const min = parseInt(time / 60)\n      const sec = time % 60\n      this.time = (min > 9 ? min : '0' + min) + ':' + (sec > 9 ? sec : '0' + sec)\n      this.lastTime = e.timeStamp\n    },\n    _seeked (e) {\n      this.seek(e.detail.value / 100 * this._ctx.duration)\n      this.lastTime = undefined\n    },\n    onClick(e) {\n      this.$emit('onClick', e)\n    }\n  }\n}\n</script>\n\n<style>\n/* 顶层容器 */\n._contain {\n  position: relative;\n  display: inline-flex;\n  width: 290px;\n  background-color: #fcfcfc;\n  border: 1px solid #e0e0e0;\n  border-radius: 2px;\n}\n\n/* 播放、暂停按钮 */\n._button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n  overflow: hidden;\n  background-color: rgb(0, 0, 0, 0.2);\n  border: 1px solid white;\n  border-radius: 50%;\n  opacity: 0.9;\n}\n\n._play {\n  margin-left: 2px;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid transparent;\n  border-left: 8px solid white;\n}\n\n._pause {\n  width: 8px;\n  height: 8px;\n  background-color: white;\n}\n\n/* 海报 */\n._poster {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 70px;\n  height: 70px;\n  background-color: #e6e6e6;\n  background-size: contain;\n}\n\n/* 标题栏 */\n._title {\n  flex: 1;\n  margin: 4px 0 0 14px;\n  text-align: left;\n}\n\n._author {\n  width: 45px;\n  font-size: 12px;\n  color: #888;\n}\n\n._name {\n  width: 140px;\n  font-size: 15px;\n  line-height: 39px;\n}\n\n._author,\n._name {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* 进度条 */\n._slider {\n  position: absolute;\n  right: 16px;\n  bottom: 8px;\n  width: 140px;\n  margin: 0;\n}\n\n/* 播放时间 */\n._time {\n  margin: 7px 14px 0 0;\n  font-size: 12px;\n  color: #888;\n}\n\n/* 响应式布局，大屏幕用更大的尺寸 */\n@media (min-width: 400px) {\n  ._contain {\n    width: 380px;\n  }\n\n  ._button {\n    width: 26px;\n    height: 26px;\n  }\n\n  ._poster {\n    width: 90px;\n    height: 90px;\n  }\n\n  ._author {\n    width: 60px;\n    font-size: 15px;\n  }\n\n  ._name {\n    width: 180px;\n    font-size: 19px;\n    line-height: 55px;\n  }\n\n  ._slider {\n    right: 20px;\n    bottom: 10px;\n    width: 180px;\n  }\n\n  ._time {\n    font-size: 15px;\n  }\n}\n</style>\n","import Component from 'E:/0/beifen/0/0Files/2025答辩/ts-ts/miniProgram/components/mp-html/components/mp-html/audio/audio.vue'\nwx.createComponent(Component)"],"names":["uni","context"],"mappings":"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"}